{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOHFX6eo7NMup4hFueesjdp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"HNiVj_BuY77Z"},"outputs":[],"source":["import discord\n","from discord.ext import commands, tasks\n","import subprocess\n","\n","from settings import ADMIN_ROLE\n","import os\n","from dotenv import load_dotenv\n","from time import time\n","\n","load_dotenv()\n","\n","TOKEN = os.getenv(\"TOKEN\")\n","\n","intents = discord.Intents.default()\n","intents.messages = True\n","bot = commands.Bot(command_prefix=\"!\", intents=intents)\n","\n","bot.remove_command('help')\n","\n","SHELL_ESCAPE_CHARS = [\":\", \"curl\", \"bash\", \"bin\", \"sh\", \"exec\", \"eval,\", \"|\", \"import\", \"chr\", \"subprocess\", \"pty\", \"popen\", \"read\", \"get_data\", \"echo\", \"builtins\", \"getattr\"]\n","\n","COOLDOWN = []\n","\n","def excape_chars(strings_array, text):\n","    return any(string in text for string in strings_array)\n","\n","def pyjail(text):\n","    if excape_chars(SHELL_ESCAPE_CHARS, text):\n","        return \"No shells are allowed\"\n","\n","    text = f\"print(eval(\\\"{text}\\\"))\"\n","    proc = subprocess.Popen(['python3', '-c', text], stdout=subprocess.PIPE, preexec_fn=os.setsid)\n","    output = \"\"\n","    try:\n","        out, err = proc.communicate(timeout=1)\n","        output = out.decode().replace(\"\\r\", \"\")\n","        print(output)\n","        print('terminating process now')\n","        proc.terminate()\n","    except Exception as e:\n","        proc.kill()\n","        print(e)\n","\n","    if output:\n","        return f\"```{output}```\"\n","\n","\n","@bot.event\n","async def on_ready():\n","    print(f'{bot.user} successfully logged in!')\n","\n","@bot.command(name=\"flag\", pass_context=True)\n","async def flag(ctx):\n","    admin_flag = any(role.name == ADMIN_ROLE for role in ctx.message.author.roles)\n","\n","    if admin_flag:\n","        cmds = \"Here are some functionalities of the bot\\n\\n`!add <number1> + <number2>`\\n`!sub <number1> - <number2>`\"\n","        await ctx.send(cmds)\n","    else:\n","        message = \"Only 'admin' can see the flag.ðŸ˜‡\"\n","        await ctx.send(message)\n","\n","@bot.command(name=\"add\", pass_context=True)\n","async def add(ctx, *args):\n","    admin_flag = any(role.name == ADMIN_ROLE for role in ctx.message.author.roles)\n","    if admin_flag:\n","        arg = \" \".join(list(args))\n","        user_id = ctx.message.author.id\n","        ans = pyjail(arg)\n","        if ans: await ctx.send(ans)\n","    else:\n","        await ctx.send(\"no flag for you, you are cheating.ðŸ˜”\")\n","\n","@bot.command(name=\"sub\", pass_context=True)\n","async def sub(ctx, *args):\n","    admin_flag = any(role.name == ADMIN_ROLE for role in ctx.message.author.roles)\n","    if admin_flag:\n","        arg = \" \".join(list(args))\n","        ans = pyjail(arg)\n","        if ans: await ctx.send(ans)\n","    else:\n","        await ctx.send(\"no flag for you, you are cheating.ðŸ˜”\")\n","\n","\n","@bot.command(name=\"help\", pass_context=True)\n","async def help(ctx, *args):\n","    await ctx.send(\"Try getting `!flag` buddy... Try getting flag.ðŸ˜‰\")\n","\n","\n","@bot.event\n","async def on_command_error(ctx, error):\n","    if isinstance(error, commands.CommandNotFound):\n","        await ctx.send(\"Try getting `!flag` buddy... Try getting flag.ðŸ˜‰\")\n","    else:\n","        print(f'Error: {error}')\n","\n","\n","bot.run(TOKEN)"]}]}